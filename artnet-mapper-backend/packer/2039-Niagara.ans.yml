---
- hosts: all
  tasks:
    # INSTALL DEPS
    - name: Update, Upgrade
      apt:
        update_cache: yes
        upgrade: dist
    - name: Install dependencies
      apt:
        pkg:
          - vim
          - git
          - tmux
          - build-essential
          - cmake
          - extra-cmake-modules
          - libdrm-dev
          - libegl1-mesa-dev
          - pigpio
    # SETUP PI STUFF
    - name: Remove default pi user
      ansible.builtin.user:
        name: pi
        state: absent
    - name: Create a new pi and set password
      ansible.builtin.user:
        name: pi
        password: "{{ 'raspberry' | password_hash('sha512') }}"
        shell: /bin/bash
    - name: Provision WiFi
      copy:
        src: ./2039-Niagara.wpa_supplicant.conf
        dest: /boot/wpa_supplicant.conf
    - name: Provision SSH
      file:
        path: /boot/ssh
        state: touch
    - name: Setup dhcpcd
      copy:
        src: ./2039-Niagara.dhcpcd.conf
        dest: /etc/dhcpcd.conf
    - name: Change the Timezone
      shell:
        cmd: raspi-config nonint do_change_timezone America/Chicago
    - name: Change the country
      shell:
        cmd: raspi-config nonint do_change_locale en_US.UTF-8
    - name: Change the keyboard
      shell:
        cmd: raspi-config nonint do_configure_keyboard us
    - name: Change the hostname
      shell:
        cmd: raspi-config nonint do_hostname Headset
    - name: Change the hostname harder
      ansible.builtin.copy:
        dest: /etc/hostname
        content: "2039-Niagara\n"
        owner: root
        group: root
        mode: '0644'
    - name: Disable userconfig
      shell:
        cmd: systemctl disable userconfig
    - name: Enable terminal still
      shell:
        cmd: systemctl enable getty@tty1
    - name: Create build dir
      become: yes
      become_user: pi
      file:
        path: /home/pi/build
        state: directory
        mode: '0755'
    # BOOST
    - name: Download Boost
      become: yes
      become_user: pi
      get_url:
        url: https://boostorg.jfrog.io/artifactory/main/release/1.81.0/source/boost_1_81_0.tar.gz
        dest: /home/pi/build
      register: BOOST_ARCHIVE
    - name: UnArchive Boost
      become: yes
      become_user: pi
      unarchive:
        src: "{{ BOOST_ARCHIVE.dest }}"
        dest: /home/pi/build
        copy: no
    - name: Setup boost
      become: yes
      become_user: pi
      shell:
        chdir: /home/pi/build/boost_1_81_0
        cmd: ./bootstrap.sh gcc
    - name: Build boost
      become: yes
      become_user: pi
      shell:
        chdir: /home/pi/build/boost_1_81_0
        cmd: ./b2 --with-system --with-thread --with-date_time --with-regex --with-serialization stage
    # ArtNet Mapper
    - name: Download ArtNet-Mapper
      become: yes
      become_user: pi
      git:
        repo: https://github.com/polis-interactive/1014-artnet-mapper.git
        dest: /home/pi/build/1014-artnet-mapper
        version: pi-image
    - name: Create Niagara build dir
      become: yes
      become_user: pi
      file:
        path: /home/pi/build/1014-artnet-mapper/artnet-mapper-backend/build
        state: directory
        mode: '0755'
    - name: Setup Niagara
      become: yes
      become_user: pi
      shell:
        chdir: /home/pi/build/1014-artnet-mapper/artnet-mapper-backend/build
        cmd: cmake -DAM_PLATFORM:STRING=EMBEDDED_LINUX ..
    - name: Make Niagara
      become: yes
      become_user: pi
      make:
        chdir: /home/pi/build/1014-artnet-mapper/artnet-mapper-backend/build
        params:
          NUM_THREADS: 4
    # SYSTEMD
    - name: Copy Niagara Service
      shell:
        cmd: cp /home/pi/build/1014-artnet-mapper/artnet-mapper-backend/system/2039-Niagara.service /etc/systemd/system/
    - name: Reload systemd
      shell:
        cmd: systemctl daemon-reload
    - name: Enable Niagara Service
      shell:
        cmd: systemctl enable 2039-Niagara.service
    # MANAGEMENT
    - name: Create ssh dir
      become: yes
      become_user: pi
      file:
        path: /home/pi/.ssh
        state: directory
        mode: '0755'
    - name: Copy authorized server key
      shell:
        cmd: cp /home/pi/build/1014-artnet-mapper/artnet-mapper-backend/management/authorized_keys.client /home/pi/.ssh/authorized_keys